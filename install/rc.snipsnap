#!/bin/sh

# This is rc.snipsnap, designed to be part of the init process.
# Comment: This is the snipsnap app server startup interface program.

### BEGIN INIT INFO
# Provides:		rc.snipsnap
# Required-Start:	$network $local_fs $syslog $time
# Required-Stop:	$network $local_fs $syslog $time
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Starts and stops jetty for snipsnap
# Description:		Enables the SnipSnap blog and wiki
### END INIT INFO

#
# GNU GENERAL PUBLIC LICENSE

# Copyright (C) 2007 Dave Levy 

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

pname=`basename $0`
Ver=1.4
# are echo's a good idea for an init script
echo "${pname} ${Ver} Copyright (C) 2007 Dave Levy
${pname} comes with ABSOLUTELY NO WARRANTY;"

USAGE="$0 start|stop|restart|status|help"

#######################################################
#
# Environment -
#
# These are instance specific parameters. They are
# hard coded for simplicity and performance. This means
# that they need to be manually checked at installation 
# time. Also not sure if the Java Home needs to be set
# since the code prepared for 1&1 has JAVA_HOME set in 
# the scripts using the snipsnap home ~/etc/config file.
# I don't want to invoke a functions file or rely on 
# non 'sh' syntax. 
#
SNIPSNAP_HOME=/home/snipsnap
BINDIR=${SNIPSNAP_HOME}/bin
JAVA_HOME=/usr/lib/jvm/java-1.5.0-sun/jre
USER=snipsnap
export JAVA_HOME SNIPSNAP_HOME


if [ ! -f ${BINDIR}/snipsnapmgr.sh ]; then
	echo cannot find snipsnapmgr.sh 
	exit 10
fi

export JAVA_HOME SNIPSNAP_HOME

if [ ! -d $JAVA_HOME ]
then
	$JAVA_HOME is not a directory
fi
if [ ! -d $SNIPSNAP_HOME ]
then
	$SNIPSNAP_HOME is not a directory
fi

# Functions

run()
{
su - ${USER} -c "${SNIPSNAP_HOME}/snipsnapmgr.sh $* "
}

# The LSB standard is start|stop|restart|force-reload|[status]

case $1 in
start)	run start
	;;
stop)	run stop -v
	;;
restart) \
	run stop
	sleep 5
	run startup
	;;
status) run status -verbose
	exit $?
	;;
help)	echo $USAGE
	;;
*)	echo $USAGE
	exit 255
	;;
esac
exit 0
